stages:
  - build
  - deploy

variables:
  ECR_REPOSITORY: backend
  EKS_CLUSTER_NAME: stagging-cluster

build-and-push:
  stage: build
  image: docker:20.10.16
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - apk add --no-cache python3 py3-pip
    - pip3 install awscli
    - aws sts get-caller-identity
    - aws ecr create-repository --repository-name backend --region eu-north-1
    - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  script:
    - docker build -t $ECR_REPOSITORY:$CI_COMMIT_SHORT_SHA .
    - docker tag $ECR_REPOSITORY:$CI_COMMIT_SHORT_SHA $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY:$CI_COMMIT_SHORT_SHA
    - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPOSITORY:$CI_COMMIT_SHORT_SHA
  only:
    - main

deploy-staging:
  stage: deploy
  image: heyvaldemar/aws-kubectl:latest
  script:
    - aws sts get-caller-identity
    - aws eks update-kubeconfig --region $AWS_DEFAULT_REGION --name $EKS_CLUSTER_NAME
    - kubectl apply -f k8s/backend-deployment-staging.yaml
  only:
    - main
  dependencies:
    - build-and-push


